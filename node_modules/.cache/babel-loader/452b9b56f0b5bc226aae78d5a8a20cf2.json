{"ast":null,"code":"import axios from 'axios'; // custom.js code\n\nconst authFetch = axios.create({\n  baseURL: 'https://course-api.com'\n}); // inceptors request\n\nauthFetch.interceptors.request.use(request => {\n  request.headers.common['Accept'] = 'application/json';\n  console.log('request sent');\n  return request;\n}, err => {\n  return Promise.reject(err);\n}); // inceptors response\n\nauthFetch.interceptors.response.use(response => {\n  console.log('got response');\n  return response;\n}, err => {\n  console.log(err.response);\n\n  if (err.response.status === 404) {\n    console.log('NOT FOUND');\n  }\n\n  return Promise.reject(err);\n});\nexport default authFetch;","map":{"version":3,"sources":["D:/react-env/react-projects/reviews/setup/src/axios/interceptors.js"],"names":["axios","authFetch","create","baseURL","interceptors","request","use","headers","common","console","log","err","Promise","reject","response","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE;AADoB,CAAb,CAAlB,C,CAIA;;AACAF,SAAS,CAACG,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACGD,OAAD,IAAa;AACXA,EAAAA,OAAO,CAACE,OAAR,CAAgBC,MAAhB,CAAuB,QAAvB,IAAmC,kBAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAOL,OAAP;AACD,CALH,EAMGM,GAAD,IAAS;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CARH,E,CAWA;;AACAV,SAAS,CAACG,YAAV,CAAuBU,QAAvB,CAAgCR,GAAhC,CACGQ,QAAD,IAAc;AACZL,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAOI,QAAP;AACD,CAJH,EAKGH,GAAD,IAAS;AACPF,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACG,QAAhB;;AACA,MAAIH,GAAG,CAACG,QAAJ,CAAaC,MAAb,KAAwB,GAA5B,EAAiC;AAC/BN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACD,SAAOE,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAXH;AAcA,eAAeV,SAAf","sourcesContent":["import axios from 'axios'\r\n\r\n// custom.js code\r\nconst authFetch = axios.create({\r\n  baseURL: 'https://course-api.com',\r\n})\r\n\r\n// inceptors request\r\nauthFetch.interceptors.request.use(\r\n  (request) => {\r\n    request.headers.common['Accept'] = 'application/json'\r\n    console.log('request sent')\r\n    return request\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\n// inceptors response\r\nauthFetch.interceptors.response.use(\r\n  (response) => {\r\n    console.log('got response')\r\n    return response\r\n  },\r\n  (err) => {\r\n    console.log(err.response)\r\n    if (err.response.status === 404) {\r\n      console.log('NOT FOUND')\r\n    }\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default authFetch\r\n"]},"metadata":{},"sourceType":"module"}