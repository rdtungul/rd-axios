{"ast":null,"code":"import axios from 'axios'; // custom.js code\n\nconst authFetch = axios.create({\n  baseURL: 'https://course-api.com'\n}); // inceptors request\n\nauthFetch.interceptors.request.use(req => {\n  req.headers.common['Accept'] = 'application/json';\n  console.log('request sent');\n  return req;\n}, err => {\n  return Promise.reject(err);\n}); // inceptors response\n\nauthFetch.interceptors.request.use(res => {\n  console.log('got response');\n  return res;\n}, err => {\n  console.log(err.res);\n\n  if (err.res.status === 404) {\n    console.log('NOT FOUND');\n  }\n\n  return Promise.reject(err);\n});\nexport default authFetch;","map":{"version":3,"sources":["D:/react-env/react-projects/reviews/setup/src/axios/interceptors.js"],"names":["axios","authFetch","create","baseURL","interceptors","request","use","req","headers","common","console","log","err","Promise","reject","res","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE;AADoB,CAAb,CAAlB,C,CAIA;;AACAF,SAAS,CAACG,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACGC,GAAD,IAAS;AACPA,EAAAA,GAAG,CAACC,OAAJ,CAAYC,MAAZ,CAAmB,QAAnB,IAA+B,kBAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAOJ,GAAP;AACD,CALH,EAMGK,GAAD,IAAS;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CARH,E,CAWA;;AACAX,SAAS,CAACG,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACGS,GAAD,IAAS;AACPL,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAOI,GAAP;AACD,CAJH,EAKGH,GAAD,IAAS;AACPF,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACG,GAAhB;;AACA,MAAIH,GAAG,CAACG,GAAJ,CAAQC,MAAR,KAAmB,GAAvB,EAA4B;AAC1BN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AACD,SAAOE,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACD,CAXH;AAcA,eAAeX,SAAf","sourcesContent":["import axios from 'axios'\r\n\r\n// custom.js code\r\nconst authFetch = axios.create({\r\n  baseURL: 'https://course-api.com',\r\n})\r\n\r\n// inceptors request\r\nauthFetch.interceptors.request.use(\r\n  (req) => {\r\n    req.headers.common['Accept'] = 'application/json'\r\n    console.log('request sent')\r\n    return req\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\n// inceptors response\r\nauthFetch.interceptors.request.use(\r\n  (res) => {\r\n    console.log('got response')\r\n    return res\r\n  },\r\n  (err) => {\r\n    console.log(err.res)\r\n    if (err.res.status === 404) {\r\n      console.log('NOT FOUND')\r\n    }\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default authFetch\r\n"]},"metadata":{},"sourceType":"module"}