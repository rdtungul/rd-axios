{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-env\\\\react-projects\\\\reviews\\\\setup\\\\src\\\\context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, useReducer, useEffect } from 'react';\nimport cartItems from './data';\nimport reducer from './reducer';\n// ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://course-api.com/react-useReducer-cart-project';\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  //   const [cart, setCart] = useState(cartItems)\n\n  // useReducer codes\n  const initialState = {\n    loading: false,\n    cart: cartItems,\n    total: 0,\n    amount: 0\n  };\n  // reduces.js code implementation\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //   clear cart functionality\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  };\n\n  //   remove single item in the cart\n  const removeCart = id => {\n    dispatch({\n      type: 'REMOVE_CART',\n      payload: id\n    });\n  };\n\n  //   increase cart functionality\n  const increaseCart = id => {\n    dispatch({\n      type: 'INCREASE_CART',\n      payload: id\n    });\n  };\n\n  //   decrease cart functionality\n  const decreaseCart = id => {\n    dispatch({\n      type: 'DECREASE_CART',\n      payload: id\n    });\n  };\n\n  // fetching data using url(instead of manually inputted data in the local files) --- via useReducer hook\n  const fetchData = async () => {\n    dispatch({\n      type: 'LOADING'\n    });\n    const res = await fetch(url);\n    const cart = await res.json();\n    dispatch({\n      type: 'DISPLAY_ITEMS',\n      payload: cart\n    });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // cart toggle amount\n  const toggleAmount = (id, type) => {\n    dispatch({\n      type: 'TOGGLE_AMOUNT',\n      payload: {\n        id,\n        type\n      }\n    });\n  };\n\n  // get cart total items in the notification using useEffect() hook\n  useEffect(() => {\n    // console.log('hello!')\n    dispatch({\n      type: 'TOTAL_ITEMS'\n    }); // total items in the cart\n    // dispatch({ type: 'Random' }) // no matching action type error here\n  }, [state.cart]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      ...state,\n      clearCart,\n      removeCart,\n      increaseCart,\n      decreaseCart,\n      toggleAmount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n// Global Context main syntax\n_s(AppProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useReducer","useEffect","cartItems","reducer","url","AppContext","createContext","AppProvider","children","initialState","loading","cart","total","amount","state","dispatch","clearCart","type","removeCart","id","payload","increaseCart","decreaseCart","fetchData","res","fetch","json","toggleAmount","useGlobalContext"],"sources":["D:/react-env/react-projects/reviews/setup/src/context.js"],"sourcesContent":["import React, { useState, useContext, useReducer, useEffect } from 'react'\nimport cartItems from './data'\nimport reducer from './reducer'\n// ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\nconst url = 'https://course-api.com/react-useReducer-cart-project'\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  //   const [cart, setCart] = useState(cartItems)\n\n  // useReducer codes\n  const initialState = {\n    loading: false,\n    cart: cartItems,\n    total: 0,\n    amount: 0,\n  }\n  // reduces.js code implementation\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  //   clear cart functionality\n  const clearCart = () => {\n    dispatch({ type: 'CLEAR_CART' })\n  }\n\n  //   remove single item in the cart\n  const removeCart = (id) => {\n    dispatch({ type: 'REMOVE_CART', payload: id })\n  }\n\n  //   increase cart functionality\n  const increaseCart = (id) => {\n    dispatch({ type: 'INCREASE_CART', payload: id })\n  }\n\n  //   decrease cart functionality\n  const decreaseCart = (id) => {\n    dispatch({ type: 'DECREASE_CART', payload: id })\n  }\n\n  // fetching data using url(instead of manually inputted data in the local files) --- via useReducer hook\n  const fetchData = async () => {\n    dispatch({ type: 'LOADING' })\n    const res = await fetch(url)\n    const cart = await res.json()\n    dispatch({ type: 'DISPLAY_ITEMS', payload: cart })\n  }\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  // cart toggle amount\n  const toggleAmount = (id, type) => {\n    dispatch({ type: 'TOGGLE_AMOUNT', payload: { id, type } })\n  }\n\n  // get cart total items in the notification using useEffect() hook\n  useEffect(() => {\n    // console.log('hello!')\n    dispatch({ type: 'TOTAL_ITEMS' }) // total items in the cart\n    // dispatch({ type: 'Random' }) // no matching action type error here\n  }, [state.cart])\n\n  return (\n    <AppContext.Provider\n      value={{\n        ...state,\n        clearCart,\n        removeCart,\n        increaseCart,\n        decreaseCart,\n        toggleAmount,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n// Global Context main syntax\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC1E,OAAOC,SAAS,MAAM,QAAQ;AAC9B,OAAOC,OAAO,MAAM,WAAW;AAC/B;AACA;AAAA;AACA,MAAMC,GAAG,GAAG,sDAAsD;AAClE,MAAMC,UAAU,gBAAGR,KAAK,CAACS,aAAa,EAAE;AAExC,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/B;;EAEA;EACA,MAAMC,YAAY,GAAG;IACnBC,OAAO,EAAE,KAAK;IACdC,IAAI,EAAET,SAAS;IACfU,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV,CAAC;EACD;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACG,OAAO,EAAEM,YAAY,CAAC;;EAE3D;EACA,MAAMO,SAAS,GAAG,MAAM;IACtBD,QAAQ,CAAC;MAAEE,IAAI,EAAE;IAAa,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIC,EAAE,IAAK;IACzBJ,QAAQ,CAAC;MAAEE,IAAI,EAAE,aAAa;MAAEG,OAAO,EAAED;IAAG,CAAC,CAAC;EAChD,CAAC;;EAED;EACA,MAAME,YAAY,GAAIF,EAAE,IAAK;IAC3BJ,QAAQ,CAAC;MAAEE,IAAI,EAAE,eAAe;MAAEG,OAAO,EAAED;IAAG,CAAC,CAAC;EAClD,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIH,EAAE,IAAK;IAC3BJ,QAAQ,CAAC;MAAEE,IAAI,EAAE,eAAe;MAAEG,OAAO,EAAED;IAAG,CAAC,CAAC;EAClD,CAAC;;EAED;EACA,MAAMI,SAAS,GAAG,YAAY;IAC5BR,QAAQ,CAAC;MAAEE,IAAI,EAAE;IAAU,CAAC,CAAC;IAC7B,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAACrB,GAAG,CAAC;IAC5B,MAAMO,IAAI,GAAG,MAAMa,GAAG,CAACE,IAAI,EAAE;IAC7BX,QAAQ,CAAC;MAAEE,IAAI,EAAE,eAAe;MAAEG,OAAO,EAAET;IAAK,CAAC,CAAC;EACpD,CAAC;EACDV,SAAS,CAAC,MAAM;IACdsB,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,YAAY,GAAG,CAACR,EAAE,EAAEF,IAAI,KAAK;IACjCF,QAAQ,CAAC;MAAEE,IAAI,EAAE,eAAe;MAAEG,OAAO,EAAE;QAAED,EAAE;QAAEF;MAAK;IAAE,CAAC,CAAC;EAC5D,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd;IACAc,QAAQ,CAAC;MAAEE,IAAI,EAAE;IAAc,CAAC,CAAC,EAAC;IAClC;EACF,CAAC,EAAE,CAACH,KAAK,CAACH,IAAI,CAAC,CAAC;EAEhB,oBACE,QAAC,UAAU,CAAC,QAAQ;IAClB,KAAK,EAAE;MACL,GAAGG,KAAK;MACRE,SAAS;MACTE,UAAU;MACVG,YAAY;MACZC,YAAY;MACZK;IACF,CAAE;IAAA,UAEDnB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AACD;AAAA,GAvEMD,WAAW;AAAA,KAAXA,WAAW;AAwEjB,OAAO,MAAMqB,gBAAgB,GAAG,MAAM;EAAA;EACpC,OAAO7B,UAAU,CAACM,UAAU,CAAC;AAC/B,CAAC;AAAA,IAFYuB,gBAAgB;AAI7B,SAASvB,UAAU,EAAEE,WAAW;AAAE;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}